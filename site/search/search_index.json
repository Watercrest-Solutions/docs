{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Introduction"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"CONTRIBUTE/","text":"Contributing to the GCT Documentation \u00b6 MkDocs is the static site generator used to build the documentation for the SE&TS Github Page . If you are apart of SE&TS and wish to have your documentation publically available on the doucmentation, you are welcome (and encouraged!) to add your documentation to this website. The following sections will give you instructions on how to properly make changes to the documentation and get them added to the github pages website. If you have questions or confusion about the documentation, please reach out to the operations team on slack and send a message via @ops . Prerequisites \u00b6 Using MkDocs to build your documentation is simple and fun (we love beautiful documentation here), with many team members being able to participate. However, there is a certain level of technical details that contributors need to understand before proceding. Not understanding these prerequisites will cause you to lost time and many headaches down the road. You do not have to be an expert at these concepts to continue, but before continuing forward, please have an understanding of the following: Git Basics Learning resource on Git How to clone a repository How to create a branch How to commit changes How to push changes to Github How to pull changes in Github MkDocs Basics How to write documentation in markdown Adding new pages to MkDocs with navigation How to serve MkDocs locally and see your changes Github Basics How to create a pull request Assigning a Pull Request to a Reviewer In addition, you have the ability utilize either the Github Desktop or Git CLI to interact with the doucmentation. If you are a beginner at using Github or Git, please consider utilizing the Github GUI. Download Github Desktop here Download Git CLI here You will also need access to the CIO-SETS/operations repository. To do this, you must be signed into the IBM Github Enterprise Account . Git and Github Setup \u00b6 Once you've completed the prerequisites, please follow the instructions to create and submit changes to the documentation. Git CLI Instructions \u00b6 Clone the repository in your directory of choice: $ git clone git@github.com:gravitycreatortechnologies/docs.git Change your directory to the location of mkdocs: $ cd mkdocs Create a new feature branch to begin development: $ git checkout -b mkdocs/my-cool-feature (Note, our team requires that all branches have a prefix of the associated project as the first component. For more information, see our Github process documenation .) At this stage, you're ready to start making changes and adding to the documenation. When you're ready to submit your changes for approval, please push your request: git push origin mkdocs/my-cool-feature Github Desktop Instructions \u00b6 Clone the repository in your directory of choice. . Create a new feature branch to begin development . (Note, our team requires that all branches have a prefix of the associated project as the first component. For more information, see our Github process documenation .) In your file explorer, navigate the the operations/mkdocs folder inside the respoitory you just cloned. This is the location of the documenation you will be changing. You can use any text editor or IDE you wish to make your changes. At this stage, you're ready to start making changes and adding to the documenation. When you're ready to submit your changes for approval, please commit your changes and push your changes to Github. . MkDocs Local Development Setup \u00b6 The current setup assumes you're working on a Mac and have Python/Pip (Version 2 or 3) installed . The following steps can only be completed inside of a terminal via command line. These steps are necessary to be able to view the documenation locally on your system utilizing mkdocs serve . While not necessary for small changes, we highly recommend you install these tools to be able to see your changes in your own local environment before pushing to production. To install MkDocs locally, follow these steps: Install the MkDocs python library: pip install mkdocs or pip3 install mkdocs Install the material theme: pip3 install mkdocs-material or pip install mkdocs-material Build and view your changes: mkdocs serve In your web browser, navigate to http://localhost:8000 to view the local version of the documenation. If you leave the mkdocs server running in your terminal, the content will be live reloaded in your browser as you make changes to the documentation. When adding documentation follow the MkDocs documentation style guidelines . Merging Changes on Github \u00b6 Once your changes are pushed, you will now need to merge your changes via a pull request. Please utilize the following steps: Go to the operations repository and open a pull request Per our policy, your pull request needs to be reviewed before being merged. When creating a pull request, please assign one of the following individuals to review your doucmentation request: Brian Schuster A relevant team member or manager affected by the documenation change Once assigned, your pull request will be approved and then merged into the documenation. Once this pull request is approved and merged, your changes will be live on the SE&TS Github Page .","title":"How to Contribute"},{"location":"CONTRIBUTE/#contributing-to-the-gct-documentation","text":"MkDocs is the static site generator used to build the documentation for the SE&TS Github Page . If you are apart of SE&TS and wish to have your documentation publically available on the doucmentation, you are welcome (and encouraged!) to add your documentation to this website. The following sections will give you instructions on how to properly make changes to the documentation and get them added to the github pages website. If you have questions or confusion about the documentation, please reach out to the operations team on slack and send a message via @ops .","title":"Contributing to the GCT Documentation"},{"location":"CONTRIBUTE/#prerequisites","text":"Using MkDocs to build your documentation is simple and fun (we love beautiful documentation here), with many team members being able to participate. However, there is a certain level of technical details that contributors need to understand before proceding. Not understanding these prerequisites will cause you to lost time and many headaches down the road. You do not have to be an expert at these concepts to continue, but before continuing forward, please have an understanding of the following: Git Basics Learning resource on Git How to clone a repository How to create a branch How to commit changes How to push changes to Github How to pull changes in Github MkDocs Basics How to write documentation in markdown Adding new pages to MkDocs with navigation How to serve MkDocs locally and see your changes Github Basics How to create a pull request Assigning a Pull Request to a Reviewer In addition, you have the ability utilize either the Github Desktop or Git CLI to interact with the doucmentation. If you are a beginner at using Github or Git, please consider utilizing the Github GUI. Download Github Desktop here Download Git CLI here You will also need access to the CIO-SETS/operations repository. To do this, you must be signed into the IBM Github Enterprise Account .","title":"Prerequisites"},{"location":"CONTRIBUTE/#git-and-github-setup","text":"Once you've completed the prerequisites, please follow the instructions to create and submit changes to the documentation.","title":"Git and Github Setup"},{"location":"CONTRIBUTE/#git-cli-instructions","text":"Clone the repository in your directory of choice: $ git clone git@github.com:gravitycreatortechnologies/docs.git Change your directory to the location of mkdocs: $ cd mkdocs Create a new feature branch to begin development: $ git checkout -b mkdocs/my-cool-feature (Note, our team requires that all branches have a prefix of the associated project as the first component. For more information, see our Github process documenation .) At this stage, you're ready to start making changes and adding to the documenation. When you're ready to submit your changes for approval, please push your request: git push origin mkdocs/my-cool-feature","title":"Git CLI Instructions"},{"location":"CONTRIBUTE/#github-desktop-instructions","text":"Clone the repository in your directory of choice. . Create a new feature branch to begin development . (Note, our team requires that all branches have a prefix of the associated project as the first component. For more information, see our Github process documenation .) In your file explorer, navigate the the operations/mkdocs folder inside the respoitory you just cloned. This is the location of the documenation you will be changing. You can use any text editor or IDE you wish to make your changes. At this stage, you're ready to start making changes and adding to the documenation. When you're ready to submit your changes for approval, please commit your changes and push your changes to Github. .","title":"Github Desktop Instructions"},{"location":"CONTRIBUTE/#mkdocs-local-development-setup","text":"The current setup assumes you're working on a Mac and have Python/Pip (Version 2 or 3) installed . The following steps can only be completed inside of a terminal via command line. These steps are necessary to be able to view the documenation locally on your system utilizing mkdocs serve . While not necessary for small changes, we highly recommend you install these tools to be able to see your changes in your own local environment before pushing to production. To install MkDocs locally, follow these steps: Install the MkDocs python library: pip install mkdocs or pip3 install mkdocs Install the material theme: pip3 install mkdocs-material or pip install mkdocs-material Build and view your changes: mkdocs serve In your web browser, navigate to http://localhost:8000 to view the local version of the documenation. If you leave the mkdocs server running in your terminal, the content will be live reloaded in your browser as you make changes to the documentation. When adding documentation follow the MkDocs documentation style guidelines .","title":"MkDocs Local Development Setup"},{"location":"CONTRIBUTE/#merging-changes-on-github","text":"Once your changes are pushed, you will now need to merge your changes via a pull request. Please utilize the following steps: Go to the operations repository and open a pull request Per our policy, your pull request needs to be reviewed before being merged. When creating a pull request, please assign one of the following individuals to review your doucmentation request: Brian Schuster A relevant team member or manager affected by the documenation change Once assigned, your pull request will be approved and then merged into the documenation. Once this pull request is approved and merged, your changes will be live on the SE&TS Github Page .","title":"Merging Changes on Github"}]}